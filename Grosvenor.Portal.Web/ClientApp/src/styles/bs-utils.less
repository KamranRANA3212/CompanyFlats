// --------------------------------------------------//
// Utilities
// --------------------------------------------------//

// variables
// Variables
//-------------------//

// v3 breakpoints -  sm: 768px, md: 992px, lg: 1200px; excluded xs as xs-properties are same throughout all breakpoints
@breakpoints:        768px, 992px, 1200px;
@breakpoint-abbrvs:  sm, md, lg;


@props:        margin, padding;
@prop-abbrvs:  m, p;

@spacer-default: 1rem;
@spacers:        0, 1, 2, 3, 4, 5, auto;
@spacer-values:  0,                      // 0 -> 0 (@spacers -> @spacer-values)
	               @spacer-default * .25,  // 1 -> .25rem
	               @spacer-default * .5,   // 2 -> .5rem
	               @spacer-default * 1,    // 3 -> 1rem
	               @spacer-default * 1.5,  // 4 -> 1.5rem
	               @spacer-default * 3,    // 5 -> 3rem
	               auto;

// Float
//-------------------//

//-- float-common --//
.float-common-utilities() {
    .float-left  { float: left   !important; }
    .float-right { float: right  !important; }
    .float-none  { float: none   !important; }
  }
  
  //-- float-responsive --//
  .float-responsive-utilities() {
    .breakpoints-loop(@i: 1) when (@i <= length(@breakpoints)) {
      @breakpoint:       extract(@breakpoints, @i);
      @breakpoint-abbrv: extract(@breakpoint-abbrvs, @i);
      
      @media (min-width: @breakpoint) {
        .float-@{breakpoint-abbrv}-left  { float: left   !important; }
        .float-@{breakpoint-abbrv}-right { float: right  !important; }
        .float-@{breakpoint-abbrv}-none  { float: none   !important; }
      }
  
      .breakpoints-loop(@i + 1);
    }
  
    .breakpoints-loop;
  }

// Text
//-------------------//

//-- text-common --//
.text-common-utilities() {
    .text-left   { text-align: left   !important; }
    .text-right  { text-align: right  !important; }
    .text-center { text-align: center !important; }
  }
  
  //-- text-responsive --//
  .text-responsive-utilities() {
    .breakpoints-loop(@i: 1) when (@i <= length(@breakpoints)) {
      @breakpoint:       extract(@breakpoints, @i);
      @breakpoint-abbrv: extract(@breakpoint-abbrvs, @i);
      
      @media (min-width: @breakpoint) {
        .text-@{breakpoint-abbrv}-left   { text-align: left   !important; }
        .text-@{breakpoint-abbrv}-right  { text-align: right  !important; }
        .text-@{breakpoint-abbrv}-center { text-align: center !important; }
      }
  
      .breakpoints-loop(@i + 1);
    }
  
    .breakpoints-loop;
  }

// spacing
// Spacing
//-------------------//

//-- spacing-common --//
.spacing-common-utilities() {
    .props-loop(@i: 1) when (@i <= length(@props)) { // @props: margin, padding;
      @prop:       extract(@props, @i);
      @prop-abbrv: extract(@prop-abbrvs, @i);
      
      .spacers-loop(@j: 1) when (@j <= length(@spacers)) {
        @spacer:       extract(@spacers, @j);
        @spacer-value: extract(@spacer-values, @j);
        
        & when not ((@spacer = auto) and (@prop = padding)) { // to avoid adding padding auto
          .@{prop-abbrv}-@{spacer}  { @{prop}:        @spacer-value !important; }
          .@{prop-abbrv}t-@{spacer} { @{prop}-top:    @spacer-value !important; }
          .@{prop-abbrv}r-@{spacer} { @{prop}-right:  @spacer-value !important; }
          .@{prop-abbrv}b-@{spacer} { @{prop}-bottom: @spacer-value !important; }
          .@{prop-abbrv}l-@{spacer} { @{prop}-left:   @spacer-value !important; }
          .@{prop-abbrv}x-@{spacer} {
            @{prop}-right: @spacer-value !important;
            @{prop}-left:  @spacer-value !important;
          }
          .@{prop-abbrv}y-@{spacer} {
            @{prop}-top:     @spacer-value !important;
            @{prop}-bottom:  @spacer-value !important;
          }
        }
        
        .spacers-loop(@j + 1);
      } // .spacers-loop
      
      .spacers-loop;
      .props-loop(@i + 1);
    } // .props-loop
    
    .props-loop;
  }
  
  //-- spacing-responsive --//
  .spacing-responsive-utilities() {
    .breakpoints-loop(@i: 1) when (@i <= length(@breakpoints)) { 
      @breakpoint:       extract(@breakpoints, @i);
      @breakpoint-abbrv: extract(@breakpoint-abbrvs, @i);
      
      @media (min-width: @breakpoint) {
        .props-loop(@j: 1) when (@j <= length(@props)) { // @props: margin, padding;
          @prop:       extract(@props, @j);
          @prop-abbrv: extract(@prop-abbrvs, @j);
  
          .spacers-loop(@k: 1) when (@k <= length(@spacers)) {
            @spacer:       extract(@spacers, @k);
            @spacer-value: extract(@spacer-values, @k);
  
            & when not ((@spacer = auto) and (@prop = padding)) { // to avoid adding padding auto
              .@{prop-abbrv}-@{breakpoint-abbrv}-@{spacer}  { @{prop}:        @spacer-value !important; }
              .@{prop-abbrv}t-@{breakpoint-abbrv}-@{spacer} { @{prop}-top:    @spacer-value !important; }
              .@{prop-abbrv}r-@{breakpoint-abbrv}-@{spacer} { @{prop}-right:  @spacer-value !important; }
              .@{prop-abbrv}b-@{breakpoint-abbrv}-@{spacer} { @{prop}-bottom: @spacer-value !important; }
              .@{prop-abbrv}l-@{breakpoint-abbrv}-@{spacer} { @{prop}-left:   @spacer-value !important; }
              .@{prop-abbrv}x-@{breakpoint-abbrv}-@{spacer} {
                @{prop}-right: @spacer-value !important;
                @{prop}-left:  @spacer-value !important;
              }
              .@{prop-abbrv}y-@{breakpoint-abbrv}-@{spacer} {
                @{prop}-top:     @spacer-value !important;
                @{prop}-bottom:  @spacer-value !important;
              }
            }
  
            .spacers-loop((@k + 1));
          } // .spacers-loop
  
          .spacers-loop;
          .props-loop((@j + 1));
        } // .props-loop
  
        .props-loop;
      }
  
      .breakpoints-loop(@i + 1);
    } // .breakpoint-loop
  
    .breakpoints-loop;
  }


/*-- float utilities --*/
.float-common-utilities;
.float-responsive-utilities;

/*-- text utilities --*/
.text-common-utilities;
.text-responsive-utilities;


/*-- spacing utilities --*/
.spacing-common-utilities;
.spacing-responsive-utilities;